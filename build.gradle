buildscript {
    repositories {
        jcenter()
        maven { url 'http://spoon.gforge.inria.fr/repositories/releases' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'com.github.jruby-gradle:jruby-gradle-plugin:1.2.1'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.13'
    }
}

group 'me.loki2302'
version '1.0-SNAPSHOT'

task wrapper(type: Wrapper) {
  gradleVersion = '2.13'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'com.moowork.node'

mainClassName = 'me.loki2302.app.App'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://spoon.gforge.inria.fr/repositories/releases' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.4.0.RELEASE'
    testCompile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    testCompile project(':doc-core')
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.4.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.4.0.RELEASE'
    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.4'
    gems 'rubygems:asciidoctor-diagram:1.5.0'
    checkstyle group: 'com.puppycrawl.tools', name: 'checkstyle', version: '7.1.1'
    checkstyle project(':doc-core')
    compile project(':doc-core-api')
    compile project(':front-end')
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    exclude 'me/loki2302/app/finalizing/**'
    systemProperty 'snippetsDir', snippetsDir
    systemProperty 'classpath', configurations.runtime.join(',')
    systemProperty 'java.awt.headless', 'false' // only needed for AWT screenshots
    testLogging.showStandardStreams = true
    outputs.dir snippetsDir
    dependsOn checkstyleMain
}

task finalTest(type: Test) {
    useJUnit()
    include 'me/loki2302/app/finalizing/**'
    systemProperty 'snippetsDir', snippetsDir
    systemProperty 'classpath', configurations.runtime.join(',')
    testLogging.showStandardStreams = true
    outputs.dir snippetsDir
    dependsOn test
}

asciidoctor {
    sourceDir 'src/main/asciidoc'
    sources {
        include 'app.adoc'
    }
    resources {
        from(sourceDir) {
            include '*.svg'
        }
    }
    attributes = [
            sourceDir: file('src'),
            snippetsDir: snippetsDir
    ]
    backends 'html5'
    requires = ['asciidoctor-diagram']
    gemPath = jrubyPrepare.outputDir
    dependsOn jrubyPrepare, finalTest
}

checkstyle {
    sourceSets = [project.sourceSets.main]
    configProperties = [
            'classpath': configurations.runtime.join(',')
    ]
}

tasks.withType(Checkstyle) {
    configFile = file('checkstyle.xml')

    logging.setLevel(LogLevel.INFO)

    reports {
        xml.enabled false
        html.enabled true
    }
}

task pdf(type: NpmTask, dependsOn: ['npmInstall', 'asciidoctor']) {
    args = ['run-script', 'run', file('build/asciidoc/html5/app.html'), file('build/asciidoc/html5/app.pdf')]
}

node {
    version = '6.6.0'
    npmVersion = '3.10.3'
    download = true
}
