@startuml

<%
function makeSequenceMarkup(frame) {
    var steps = [];

    var fromTag = frame.tag;
    var fromClassName = frame.className;
    var fromMethodName = frame.methodName;

    for(var childIndex = 0; childIndex < frame.children.size(); ++childIndex) {
        var child = frame.children.get(childIndex);
        var toTag = child.tag;
        var toComment = child.comment;
        var toClassName = child.className;
        var toMethodName = child.methodName;

        steps.push("group " + toTag + ': ' + toComment);
        steps.push(fromClassName + " -> " + toClassName + " : " + toClassName + "::" + toMethodName);
        steps = steps.concat(makeSequenceMarkup(child));
        steps.push(fromClassName + " <-- " + toClassName + " : " + toClassName + "::" + toMethodName);
        steps.push("end");
    }

    return steps;
}

var sequenceMarkup = makeSequenceMarkup(model);

for(var sequenceMarkupItemIndex = 0; sequenceMarkupItemIndex < sequenceMarkup.length; ++sequenceMarkupItemIndex) {
    var markupItem = sequenceMarkup[sequenceMarkupItemIndex]; %>

<%- markupItem %>

<% } %>

@enduml
